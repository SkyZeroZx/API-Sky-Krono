version: '3'
services:
  skykronoapi:
    build:
      context: .
      dockerfile: Dockerfile
    image: sky-krono-docker
    container_name: sky-krono-api
    hostname: sky-krono-api
    restart: always # reiniciar el contenedor si se detiene
    ports:
      - '3000:3000'
    networks:
      - example-net
    environment:
      PORT: 3000
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_NAME: ${DATABASE_NAME}
      JWT_TOKEN: ${JWT_TOKEN}
      EMAIL_HOST: ${EMAIL_HOST} # MAIL PROPERTIES
      EMAIL_PORT: ${EMAIL_PORT}
      EMAIL_USERNAME: ${EMAIL_USERNAME}
      EMAIL_PASSWORD: ${EMAIL_PASSWORD}
      PUBLIC_KEY: ${PUBLIC_KEY} # WEB PUSH PROPERTIES
      PRIVATE_KEY: ${PRIVATE_KEY}
      EMAIL_WEB_PUSH: ${EMAIL_WEB_PUSH}
      RP_ID: ${RP_ID} # WEB AUTH PROPERTIES
      RP_ID_ARRAY: ${RP_ID_ARRAY}
      ORIGIN: ${ORIGIN}
      LOGO_APP: ${LOGO_APP}
      LOGO_ICON: ${LOGO_ICON}
      URL_WEB: ${URL_WEB}
      TZ: ${TZ} # TIME ZONE PROPERTIES
      CACHE_MAX_ITEMS: ${CACHE_MAX_ITEMS} # CACHE PROPERTIES
      CACHE_TTL: ${CACHE_TTL}
      ENABLED_MYSQL_CACHE: ${ENABLED_MYSQL_CACHE}
      AWS_REGION: ${AWS_REGION} # AWS S3 PROPERTIES
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_BUCKET: ${AWS_BUCKET}
      DATE_PATTERN: ${DATE_PATTERN} # LOGGER PROPERTIES
      APP_NAME: ${APP_NAME}
      MAX_SIZE: ${MAX_SIZE}
      MAX_DAYS: ${MAX_DAYS}
      LOG_FOLDER: ${LOG_FOLDER}
      TIMESTAMP_FORMAT: ${TIMESTAMP_FORMAT}
  nginx:
    build:
      context: .
      dockerfile: nginxdockerfile
    container_name: nginx
    hostname: nginx
    ports:
      - '80:80'
    depends_on:
      - skykronoapi
    networks:
      - example-net
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - '9090:9090'
  grafana:
    image: grafana/grafana:latest
    container_name: monitoring_grafana
    restart: unless-stopped
    links:
      - prometheus:prometheus
    volumes:
      - ./data/grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=12345
      - GF_SERVER_HTTP_PORT=2525
    ports:
      - '2525:2525'
networks:
  example-net:
    external: true